---
# For prometheus scrape requests
- name: Flush all handlers 
  meta: flush_handlers

- name: Allow traffic on port 9100
  become: true
  tags: prometheus-proxy
  blockinfile:
    path: /etc/ooni/nftables/tcp/9100.nft
    create: yes
    block: |
      add rule inet filter input tcp dport 9100 counter accept comment "node exporter"
  notify:
   - reload nftables  

# For incoming fastpath traffic
- name: Allow traffic on port 8472
  become: true
  tags: fastpath
  blockinfile:
    path: /etc/ooni/nftables/tcp/8472.nft
    create: yes
    block: |
      add rule inet filter input tcp dport 8472 counter accept comment "fastpath"
  notify:
   - reload nftables  

# For serving jsonl files
- name: Allow traffic on port 8475
  become: true
  tags: fastpath
  blockinfile:
    path: /etc/ooni/nftables/tcp/8475.nft
    create: yes
    block: |
      add rule inet filter input tcp dport 8475 counter accept comment "serve measurement spool"
  notify:
   - reload nftables  

# Docker seems to have problems with nftables, so this command will translate all iptables
# commands to nftables commands
- name: Update alternatives for iptables 
  tags: docker
  become: yes
  ansible.builtin.command: "update-alternatives --set iptables /usr/sbin/iptables-nft"
  notify: 
   - restart docker

- name: Update alternatives for iptables 
  tags: docker
  become: yes
  ansible.builtin.command: "update-alternatives --set ip6tables /usr/sbin/ip6tables-nft"
  notify: 
   - restart docker

- name: Flush all handlers # Required to apply iptables settings before docker runs
  meta: flush_handlers

### Create fastpath user 
- name: Ensure the fastpath group exists
  ansible.builtin.group:
    name: "{{ fastpath_user }}"
    state: present
    gid: "1420"
  become: yes

- name: Create the fastpath user
  ansible.builtin.user:
    name: "{{ fastpath_user }}"
    home: "{{ fastpath_home }}"
    shell: "/bin/bash"
    group: "{{ fastpath_user }}"
    create_home: yes
    system: yes
    uid: "1420"
  become: yes

- name: Set ownership of the fastpath directory
  ansible.builtin.file:
    path: "{{ fastpath_home }}"
    owner: "{{ fastpath_user }}"
    group: "{{ fastpath_user }}"
    state: directory
    mode: "0700"
  become: yes

### Run fastpath
- name: Make sure that the fastpath configuration directory exists
  ansible.builtin.file:
    path: /opt/{{fastpath_user}}/backend/fastpath/
    state: directory
    mode: "0700"
    owner: "{{fastpath_user}}"
    group: "{{fastpath_user}}"

- name: Create configuration file
  tags: fastpath
  template:
    src: templates/fastpath.conf
    dest: "/opt/{{fastpath_user}}/backend/fastpath/fastpath.conf"
    mode: "0400"
    owner: "{{fastpath_user}}"
  become: yes

- name: Ensure ooniapi directory existence 
  ansible.builtin.file:
    path: /var/lib/ooniapi
    state: directory
    mode: "0711"
    owner: "{{fastpath_user}}"
    group: "{{fastpath_user}}"

- name: Ensure fastpath var dir exists
  ansible.builtin.file:
    path: /var/lib/fastpath
    state: directory
    mode: "0700"
    owner: "{{fastpath_user}}"
    group: "{{fastpath_user}}"

- name: Allow nginx access to the spool dir 
  become: true
  ansible.builtin.user:
    name: nginx
    groups: "{{fastpath_user}}"
    append: yes

- name: Get UID of a specific user
  command: id -u {{fastpath_user}}
  register: user_uid
  changed_when: false

- name: Get GID of a specific user
  command: id -g {{fastpath_user}}
  register: user_gid
  changed_when: false

- name: Ensure fastpath is running
  community.docker.docker_container:
    name: fastpath
    image: ooni/fastpath:v0.87
    state: started
    user: "{{user_uid.stdout}}:{{user_gid.stdout}}"
    # use network mode = host to allow traffic from fastpath to the statsd exporter without 
    # creating a network with redirection rules to match the ports
    network_mode: host  
    # published_ports: # unused on network_mode: host
    #   - "8472:8472"
    volumes:
      - /opt/{{fastpath_user}}/backend/fastpath/fastpath.conf:/etc/ooni/fastpath.conf
      - /var/lib/ooniapi:/var/lib/ooniapi
      - /var/lib/fastpath:/var/lib/fastpath

### Serve jsonl from spool dir for oonimeasurements 
- name: Add nginx config file for serving spool dir measurements
  tags: fastpath
  template:
    src: templates/02-spool-dir.conf
    dest: /etc/nginx/sites-enabled/02-spool-dir.conf
    mode: "0444"
    owner: nginx
  become: yes
  notify: 
    - reload nginx

- name: Ensure the statsd to prometheus exporter is running
  community.docker.docker_container:
    name: statsd-exporter
    image: prom/statsd-exporter:v0.28.0
    state: started
    published_ports: 
      - "9102:9102" # for /metrics
      - "8125:9125" # for reporting metrics 
      - "8125:9125/udp"

### API Uploader set up
- name: configure api uploader using s3 bucket
  tags: uploader
  template:
    src: templates/api-uploader.conf
    dest: /etc/ooni/api-uploader.conf

- name: Install measurement uploader script
  tags: uploader
  template:
    src: templates/ooni_api_uploader.py
    dest: /usr/bin/ooni_api_uploader.py
    owner: "{{fastpath_user}}"
    group: "{{fastpath_user}}"
    mode: "0755"

- name: Install dependencies for uploader
  tags: uploader
  apt:
    pkg: 
    - python3-statsd
    - python3-boto3
    - python3-clickhouse-driver
    - python3-ujson
    - python3-systemd

- name: Install uploder service
  tags: uploader
  template:
    src: templates/ooni-api-uploader.service 
    dest: /etc/systemd/system/ooni-api-uploader.service
    mode: "0644"
    owner: root

- name: Install uploader timer
  tags: uploader
  template:
    src: templates/ooni-api-uploader.timer
    dest: /etc/systemd/system/ooni-api-uploader.timer
    mode: "0644"
    owner: root

- name: Create spool dir
  tags: uploader
  ansible.builtin.file:
    path: /var/lib/ooniapi/measurements/incoming/
    state: directory
    mode: '0711'
    owner: "{{fastpath_user}}"
    group: "{{fastpath_user}}"

- name: Ensure uploader timer runs
  tags: uploader
  systemd:
    name: ooni-api-uploader.timer
    state: started
    enabled: yes
